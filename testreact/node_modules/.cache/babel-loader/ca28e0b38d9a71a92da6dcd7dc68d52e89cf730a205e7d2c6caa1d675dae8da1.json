{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst studentService = require('../models/studentModel');\n\n// Middleware to check if user is authenticated\nconst isAuthenticated = (req, res, next) => {\n  if (req.session.user) {\n    next();\n  } else {\n    res.status(401).json({\n      message: 'Unauthorized'\n    });\n  }\n};\n\n// Apply middleware to all routes\nrouter.use(isAuthenticated);\n\n// Add a new student\nrouter.post('/addstudent', (req, res) => {\n  studentService.addStudent(req.body).then(result => res.status(201).json(result)).catch(error => {\n    console.error('error ========== >');\n    console.error(error);\n    res.status(500).json({\n      error: error.message\n    });\n  });\n});\n\n// Search students by name, subject, and school with pagination\nrouter.get('/searchstudent', (req, res) => {\n  const query = {};\n  if (req.query.name) {\n    query.name = new RegExp(req.query.name, 'i');\n  }\n  if (req.query.subject) {\n    query.subject = new RegExp(req.query.subject, 'i');\n  }\n  if (req.query.school) {\n    query.school = new RegExp(req.query.school, 'i');\n  }\n  const page = parseInt(req.query.page) || 1; // Default to page 1\n  const limit = parseInt(req.query.limit) || 5; // Default to 5 records per page\n\n  studentService.searchStudents(query, page, limit).then(result => res.json(result)).catch(error => {\n    console.error(error);\n    res.status(500).json({\n      error: error.message\n    });\n  });\n});\n\n// Delete a student by ID\nrouter.post('/deletestudent/:id', (req, res) => {\n  studentService.deleteStudent(req.params.id).then(result => res.json(result)).catch(error => {\n    console.error(error);\n    res.status(500).json({\n      error: error.message\n    });\n  });\n});\n\n// Update a student's information\nrouter.post('/updatestudent/:id', (req, res) => {\n  studentService.updateStudent(req.params.id, req.body).then(result => res.json(result)).catch(error => {\n    console.error(error);\n    res.status(500).json({\n      error: error.message\n    });\n  });\n});\n\n// Get a student by ID\nrouter.get('/getstudent/:id', (req, res) => {\n  studentService.getStudentById(req.params.id).then(result => res.json(result)).catch(error => {\n    console.error(error);\n    res.status(500).json({\n      error: error.message\n    });\n  });\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","studentService","isAuthenticated","req","res","next","session","user","status","json","message","use","post","addStudent","body","then","result","catch","error","console","get","query","name","RegExp","subject","school","page","parseInt","limit","searchStudents","deleteStudent","params","id","updateStudent","getStudentById","module","exports"],"sources":["C:/Users/udayd/OneDrive/Desktop/Rays/testreact/src/components/StudentList.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst studentService = require('../models/studentModel');\n\n// Middleware to check if user is authenticated\nconst isAuthenticated = (req, res, next) => {\n    if (req.session.user) {\n        next();\n    } else {\n        res.status(401).json({ message: 'Unauthorized' });\n    }\n};\n\n// Apply middleware to all routes\nrouter.use(isAuthenticated);\n\n// Add a new student\nrouter.post('/addstudent', (req, res) => {\n    studentService.addStudent(req.body)\n        .then(result => res.status(201).json(result))\n        .catch(error => {\n            console.error('error ========== >');\n            console.error(error);\n            res.status(500).json({ error: error.message });\n        });\n});\n\n// Search students by name, subject, and school with pagination\nrouter.get('/searchstudent', (req, res) => {\n    const query = {};\n    if (req.query.name) {\n        query.name = new RegExp(req.query.name, 'i');\n    }\n    if (req.query.subject) {\n        query.subject = new RegExp(req.query.subject, 'i');\n    }\n    if (req.query.school) {\n        query.school = new RegExp(req.query.school, 'i');\n    }\n\n    const page = parseInt(req.query.page) || 1; // Default to page 1\n    const limit = parseInt(req.query.limit) || 5; // Default to 5 records per page\n\n    studentService.searchStudents(query, page, limit)\n        .then(result => res.json(result))\n        .catch(error => {\n            console.error(error);\n            res.status(500).json({ error: error.message });\n        });\n});\n\n// Delete a student by ID\nrouter.post('/deletestudent/:id', (req, res) => {\n    studentService.deleteStudent(req.params.id)\n        .then(result => res.json(result))\n        .catch(error => {\n            console.error(error);\n            res.status(500).json({ error: error.message });\n        });\n});\n\n// Update a student's information\nrouter.post('/updatestudent/:id', (req, res) => {\n    studentService.updateStudent(req.params.id, req.body)\n        .then(result => res.json(result))\n        .catch(error => {\n            console.error(error);\n            res.status(500).json({ error: error.message });\n        });\n});\n\n// Get a student by ID\nrouter.get('/getstudent/:id', (req, res) => {\n    studentService.getStudentById(req.params.id)\n        .then(result => res.json(result))\n        .catch(error => {\n            console.error(error);\n            res.status(500).json({ error: error.message });\n        });\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}